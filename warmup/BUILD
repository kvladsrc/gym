#Explicitly define cc_library for dijkstra
cc_library(
    name = "dijkstra_lib",
    srcs = ["dijkstra.cc"],
    hdrs = ["dijkstra.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for dfs
cc_library(
    name = "dfs_lib",
    srcs = ["dfs.cc"],
    hdrs = ["dfs.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for bfs
cc_library(
    name = "bfs_lib",
    srcs = ["bfs.cc"],
    hdrs = ["bfs.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for a_star
cc_library(
    name = "a_star_lib",
    srcs = ["a_star.cc"],
    hdrs = ["a_star.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for counting_sort
cc_library(
    name = "counting_sort_lib",
    srcs = ["counting_sort.cc"],
    hdrs = ["counting_sort.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for 3sum
cc_library(
    name = "3sum_lib",
    srcs = ["3sum.cc"],
    hdrs = ["3sum.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for all_divisors
cc_library(
    name = "all_divisors_lib",
    srcs = ["all_divisors.cc"],
    hdrs = ["all_divisors.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for all_divisors
cc_library(
    name = "minimum_spanning_tree_lib",
    srcs = ["minimum_spanning_tree.cc"],
    hdrs = ["minimum_spanning_tree.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for binary_heap
cc_library(
    name = "binary_heap_lib",
    srcs = ["binary_heap.cc"],
    hdrs = ["binary_heap.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for binary_tree
cc_library(
    name = "binary_tree_lib",
    srcs = ["binary_tree.cc"],
    hdrs = ["binary_tree.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for bipartiteness_checker
cc_library(
    name = "bipartiteness_checker_lib",
    srcs = ["bipartiteness_checker.cc"],
    hdrs = ["bipartiteness_checker.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for boyer_moore
cc_library(
    name = "boyer_moore_lib",
    srcs = ["boyer_moore.cc"],
    hdrs = ["boyer_moore.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for bubble_sort
cc_library(
    name = "bubble_sort_lib",
    srcs = ["bubble_sort.cc"],
    hdrs = ["bubble_sort.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for combinations
cc_library(
    name = "combinations_lib",
    srcs = ["combinations.cc"],
    hdrs = ["combinations.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for cycle_detection
cc_library(
    name = "cycle_detection_lib",
    srcs = ["cycle_detection.cc"],
    hdrs = ["cycle_detection.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for dsu
cc_library(
    name = "dsu_lib",
    srcs = ["dsu.cc"],
    hdrs = ["dsu.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for dutch_flag
cc_library(
    name = "dutch_flag_lib",
    srcs = ["dutch_flag.cc"],
    hdrs = ["dutch_flag.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for edit_distance
cc_library(
    name = "edit_distance_lib",
    srcs = ["edit_distance.cc"],
    hdrs = ["edit_distance.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for erato
cc_library(
    name = "erato_lib",
    srcs = ["erato.cc"],
    hdrs = ["erato.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for eulerian_cycle
cc_library(
    name = "eulerian_cycle_lib",
    srcs = ["eulerian_cycle.cc"],
    hdrs = ["eulerian_cycle.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for fast_power
cc_library(
    name = "fast_power_lib",
    srcs = ["fast_power.cc"],
    hdrs = ["fast_power.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for fibonacci
cc_library(
    name = "fibonacci_lib",
    srcs = ["fibonacci.cc"],
    hdrs = ["fibonacci.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for fenwick_tree
cc_library(
    name = "fenwick_tree_lib",
    srcs = ["fenwick_tree.cc"],
    hdrs = ["fenwick_tree.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for floyd_warshall
cc_library(
    name = "floyd_warshall_lib",
    srcs = ["floyd_warshall.cc"],
    hdrs = ["floyd_warshall.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for gcd
cc_library(
    name = "gcd_lib",
    srcs = ["gcd.cc"],
    hdrs = ["gcd.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for gorner
cc_library(
    name = "gorner_lib",
    srcs = ["gorner.cc"],
    hdrs = ["gorner.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for graph_topological_sort
cc_library(
    name = "graph_topological_sort_lib",
    srcs = ["graph_topological_sort.cc"],
    hdrs = ["graph_topological_sort.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for jenkins_hash
cc_library(
    name = "jenkins_hash_lib",
    srcs = ["jenkins_hash.cc"],
    hdrs = ["jenkins_hash.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for kadanes
cc_library(
    name = "kadanes_lib",
    srcs = ["kadanes.cc"],
    hdrs = ["kadanes.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for knapsack
cc_library(
    name = "knapsack_lib",
    srcs = ["knapsack.cc"],
    hdrs = ["knapsack.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for knapsack_with_duplicates
cc_library(
    name = "knapsack_with_duplicates_lib",
    srcs = ["knapsack_with_duplicates.cc"],
    hdrs = ["knapsack_with_duplicates.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for knuth_morris_pratt
cc_library(
    name = "knuth_morris_pratt_lib",
    srcs = ["knuth_morris_pratt.cc"],
    hdrs = ["knuth_morris_pratt.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for lcm
cc_library(
    name = "lcm_lib",
    srcs = ["lcm.cc"],
    hdrs = ["lcm.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for lis
cc_library(
    name = "lis_lib",
    srcs = ["lis.cc"],
    hdrs = ["lis.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for lru_cache
cc_library(
    name = "lru_cache_lib",
    srcs = ["lru_cache.cc"],
    hdrs = ["lru_cache.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for median_of_stream
cc_library(
    name = "median_of_stream_lib",
    srcs = ["median_of_stream.cc"],
    hdrs = ["median_of_stream.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for merge_sort
cc_library(
    name = "merge_sort_lib",
    srcs = ["merge_sort.cc"],
    hdrs = ["merge_sort.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for negative_cycle_detection
cc_library(
    name = "negative_cycle_detection_lib",
    srcs = ["negative_cycle_detection.cc"],
    hdrs = ["negative_cycle_detection.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for prime_checker
cc_library(
    name = "prime_checker_lib",
    srcs = ["prime_checker.cc"],
    hdrs = ["prime_checker.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for quick_sort
cc_library(
    name = "quick_sort_lib",
    srcs = ["quick_sort.cc"],
    hdrs = ["quick_sort.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for sets_in_tree
cc_library(
    name = "lcs_lib",
    srcs = ["lcs.cc"],
    hdrs = ["lcs.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

#Explicitly define cc_library for sets_in_tree
cc_library(
    name = "binary_search_with_duplicates_lib",
    srcs = ["binary_search_with_duplicates.cc"],
    hdrs = ["binary_search_with_duplicates.hpp"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "mo_algorithm",
    srcs = ["mo_algorithm.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "ll_reverse",
    srcs = ["ll_reverse.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "min_stack",
    srcs = ["min_stack.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "nth_element",
    srcs = ["nth_element.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "partition",
    srcs = ["partition.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "sets_in_tree",
    srcs = ["sets_in_tree.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "subsets",
    srcs = ["subsets.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "trie",
    srcs = ["trie.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "strongly_connected_components",
    srcs = ["strongly_connected_components.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

cc_binary(
    name = "sqrt",
    srcs = ["sqrt.cc"],
    copts = [
        "-Werror",
        "-std=c++17",
    ],
)

#Automatically create a cc_test for every _gtest.cc file.
[
    cc_test(
        name = src.replace(".cc", ""),
        srcs = [src],
        copts = [
            "-Werror",
            "-std=c++17",
        ],
        deps = ["@googletest//:gtest_main", ":" + src.replace("_gtest.cc", "") + "_lib"],
    )
    for src in glob(["*_gtest.cc"])
]
