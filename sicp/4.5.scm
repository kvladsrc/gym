(define (cond? exp) (tagged-list? exp `cond))
(define (cond-clauses exp) (cdr exp))
(define (cond-else-clause? clause)
  (eq? (cond-predicate clause) `else))
(define (cond-predicate clause) (car clause))
(define (cond-actions clause) (cdr clause))
(define (cond=>clause? clause)
  (tagged-list? (cond-actions clause)
		`=>))
(define (cond=>clause-proc clause)
  (caddr clause))
(define (cond->if exp)
  (expand-clauses (cond-clauses exp)))
(define (expand-clauses clauses)
  (if (null? clauses)
      `false                           ; нет ветви else
       (let ((first (car clauses))
	     (rest (cdr clauses)))
	 (if (cond-else-clause? first)
	     (if (null? rest)
		 (sequence->exp (cond-actions first))
		 (error "Ветвь ELSE не последняя -- COND->IF"
			clauses))
	     (if (not (cond=>clause? first))
		 (make-if (cond-predicate first)
			  (sequence->exp (cond-actions first))
			  (expand-clauses rest))
		 (make-if (cond-predicate first)
			  (list (cond=>clause-proc first)
				(cond-predicate first))
			  (expand-clauses rest)))))))
